/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function() {
var exports = {};
exports.id = "pages/api/task/submit";
exports.ids = ["pages/api/task/submit"];
exports.modules = {

/***/ "./lib/init_middleware.js":
/*!********************************!*\
  !*** ./lib/init_middleware.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ initMiddleware; }\n/* harmony export */ });\n// Helper method to wait for a middleware to execute before continuing\n// And to throw an error when an error happens in a middleware\nfunction initMiddleware(middleware) {\n  return (req, res) => new Promise((resolve, reject) => {\n    middleware(req, res, result => {\n      if (result instanceof Error) {\n        return reject(result);\n      }\n\n      return resolve(result);\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1zdGFydGVyLy4vbGliL2luaXRfbWlkZGxld2FyZS5qcz9kMTJiIl0sIm5hbWVzIjpbImluaXRNaWRkbGV3YXJlIiwibWlkZGxld2FyZSIsInJlcSIsInJlcyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVzdWx0IiwiRXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ2UsU0FBU0EsY0FBVCxDQUF3QkMsVUFBeEIsRUFBb0M7QUFDL0MsU0FBTyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FDTCxJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQy9CTCxjQUFVLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFZSSxNQUFELElBQVk7QUFDL0IsVUFBSUEsTUFBTSxZQUFZQyxLQUF0QixFQUE2QjtBQUMzQixlQUFPRixNQUFNLENBQUNDLE1BQUQsQ0FBYjtBQUNEOztBQUNELGFBQU9GLE9BQU8sQ0FBQ0UsTUFBRCxDQUFkO0FBQ0QsS0FMUyxDQUFWO0FBTUQsR0FQRCxDQURGO0FBU0QiLCJmaWxlIjoiLi9saWIvaW5pdF9taWRkbGV3YXJlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSGVscGVyIG1ldGhvZCB0byB3YWl0IGZvciBhIG1pZGRsZXdhcmUgdG8gZXhlY3V0ZSBiZWZvcmUgY29udGludWluZ1xuLy8gQW5kIHRvIHRocm93IGFuIGVycm9yIHdoZW4gYW4gZXJyb3IgaGFwcGVucyBpbiBhIG1pZGRsZXdhcmVcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXRNaWRkbGV3YXJlKG1pZGRsZXdhcmUpIHtcbiAgICByZXR1cm4gKHJlcSwgcmVzKSA9PlxuICAgICAgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBtaWRkbGV3YXJlKHJlcSwgcmVzLCAocmVzdWx0KSA9PiB7XG4gICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0KHJlc3VsdClcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlc29sdmUocmVzdWx0KVxuICAgICAgICB9KVxuICAgICAgfSlcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/init_middleware.js\n");

/***/ }),

/***/ "./lib/plugin-compose.js":
/*!*******************************!*\
  !*** ./lib/plugin-compose.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createComposeMiddleware\": function() { return /* binding */ createComposeMiddleware; },\n/* harmony export */   \"loadCachedMiddleware\": function() { return /* binding */ loadCachedMiddleware; }\n/* harmony export */ });\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst createComposeMiddleware = (cached, composeList) => {\n  if (!Array.isArray(composeList)) {\n    throw TypeError(\"require [compose list] list of middleware id\");\n  }\n\n  return function (context) {\n    let index = -1;\n    return dispatch(0);\n\n    function dispatch(i) {\n      index++;\n      if (i >= composeList.length) return null;\n      const fn = cached[composeList[i]].exports.handler;\n      return fn(context, dispatch.bind(null, i + 1));\n    }\n  };\n}; // plugin loader\n\nconst loadCachedMiddleware = () => {\n  const pluginDir = `./plugins`; // scan plugin dir\n\n  const pluginDirList = fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(pluginDir);\n  const middlewares = {};\n\n  for (let folder of pluginDirList) {\n    const filePath = path__WEBPACK_IMPORTED_MODULE_1___default().join(pluginDir, folder); // const stat = fs.statSync(filePath);\n\n    const manifest = path__WEBPACK_IMPORTED_MODULE_1___default().join(filePath, 'manifest.json');\n    const mf = path__WEBPACK_IMPORTED_MODULE_1___default().join(filePath, 'module.js');\n\n    try {\n      const meta = JSON.parse(fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(manifest, 'utf-8'));\n      const content = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(mf);\n      const fn = new Function('n', content);\n      const exports = fn();\n      const component = {\n        index: path__WEBPACK_IMPORTED_MODULE_1___default().join(filePath, 'module.html')\n      };\n      middlewares[meta.id] = Object.assign({}, meta, {\n        exports\n      }, {\n        component\n      });\n    } catch (loadException) {\n      console.log(`can not load middleware: ${folder}, ${loadException}`);\n    }\n  }\n\n  return middlewares;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1zdGFydGVyLy4vbGliL3BsdWdpbi1jb21wb3NlLmpzPzllMjMiXSwibmFtZXMiOlsiY3JlYXRlQ29tcG9zZU1pZGRsZXdhcmUiLCJjYWNoZWQiLCJjb21wb3NlTGlzdCIsIkFycmF5IiwiaXNBcnJheSIsIlR5cGVFcnJvciIsImNvbnRleHQiLCJpbmRleCIsImRpc3BhdGNoIiwiaSIsImxlbmd0aCIsImZuIiwiZXhwb3J0cyIsImhhbmRsZXIiLCJiaW5kIiwibG9hZENhY2hlZE1pZGRsZXdhcmUiLCJwbHVnaW5EaXIiLCJwbHVnaW5EaXJMaXN0IiwiZnMiLCJtaWRkbGV3YXJlcyIsImZvbGRlciIsImZpbGVQYXRoIiwicGF0aCIsIm1hbmlmZXN0IiwibWYiLCJtZXRhIiwiSlNPTiIsInBhcnNlIiwiY29udGVudCIsIkZ1bmN0aW9uIiwiY29tcG9uZW50IiwiaWQiLCJPYmplY3QiLCJhc3NpZ24iLCJsb2FkRXhjZXB0aW9uIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVPLE1BQU1BLHVCQUF1QixHQUFHLENBQUNDLE1BQUQsRUFBU0MsV0FBVCxLQUF5QjtBQUM1RCxNQUFJLENBQUNDLEtBQUssQ0FBQ0MsT0FBTixDQUFjRixXQUFkLENBQUwsRUFBaUM7QUFDN0IsVUFBTUcsU0FBUyxDQUFDLDhDQUFELENBQWY7QUFDSDs7QUFDRCxTQUFPLFVBQVNDLE9BQVQsRUFBa0I7QUFDckIsUUFBSUMsS0FBSyxHQUFHLENBQUMsQ0FBYjtBQUNBLFdBQU9DLFFBQVEsQ0FBQyxDQUFELENBQWY7O0FBQ0EsYUFBU0EsUUFBVCxDQUFrQkMsQ0FBbEIsRUFBcUI7QUFDakJGLFdBQUs7QUFDTCxVQUFJRSxDQUFDLElBQUlQLFdBQVcsQ0FBQ1EsTUFBckIsRUFBNkIsT0FBTyxJQUFQO0FBQzdCLFlBQU1DLEVBQUUsR0FBR1YsTUFBTSxDQUFDQyxXQUFXLENBQUNPLENBQUQsQ0FBWixDQUFOLENBQXVCRyxPQUF2QixDQUErQkMsT0FBMUM7QUFDQSxhQUFPRixFQUFFLENBQUNMLE9BQUQsRUFBVUUsUUFBUSxDQUFDTSxJQUFULENBQWMsSUFBZCxFQUFvQkwsQ0FBQyxHQUFDLENBQXRCLENBQVYsQ0FBVDtBQUNIO0FBQ0osR0FURDtBQVVILENBZE0sQyxDQWdCUDs7QUFDTyxNQUFNTSxvQkFBb0IsR0FBRyxNQUFNO0FBQ3RDLFFBQU1DLFNBQVMsR0FBSSxXQUFuQixDQURzQyxDQUV0Qzs7QUFDQSxRQUFNQyxhQUFhLEdBQUdDLHFEQUFBLENBQWVGLFNBQWYsQ0FBdEI7QUFDQSxRQUFNRyxXQUFXLEdBQUcsRUFBcEI7O0FBQ0EsT0FBSyxJQUFJQyxNQUFULElBQW1CSCxhQUFuQixFQUFrQztBQUM5QixVQUFNSSxRQUFRLEdBQUdDLGdEQUFBLENBQVVOLFNBQVYsRUFBcUJJLE1BQXJCLENBQWpCLENBRDhCLENBRTFCOztBQUNKLFVBQU1HLFFBQVEsR0FBR0QsZ0RBQUEsQ0FBVUQsUUFBVixFQUFvQixlQUFwQixDQUFqQjtBQUNBLFVBQU1HLEVBQUUsR0FBR0YsZ0RBQUEsQ0FBVUQsUUFBVixFQUFvQixXQUFwQixDQUFYOztBQUNBLFFBQUc7QUFDQyxZQUFNSSxJQUFJLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXVCxzREFBQSxDQUFnQkssUUFBaEIsRUFBMEIsT0FBMUIsQ0FBWCxDQUFiO0FBQ0EsWUFBTUssT0FBTyxHQUFHVixzREFBQSxDQUFnQk0sRUFBaEIsQ0FBaEI7QUFDQSxZQUFNYixFQUFFLEdBQUcsSUFBSWtCLFFBQUosQ0FBYSxHQUFiLEVBQWtCRCxPQUFsQixDQUFYO0FBQ0EsWUFBTWhCLE9BQU8sR0FBR0QsRUFBRSxFQUFsQjtBQUNBLFlBQU1tQixTQUFTLEdBQUc7QUFDZHZCLGFBQUssRUFBRWUsZ0RBQUEsQ0FBVUQsUUFBVixFQUFvQixhQUFwQjtBQURPLE9BQWxCO0FBR0FGLGlCQUFXLENBQUNNLElBQUksQ0FBQ00sRUFBTixDQUFYLEdBQXVCQyxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCUixJQUFsQixFQUF3QjtBQUFDYjtBQUFELE9BQXhCLEVBQW1DO0FBQUNrQjtBQUFELE9BQW5DLENBQXZCO0FBRUgsS0FWRCxDQVVFLE9BQU1JLGFBQU4sRUFBcUI7QUFDbkJDLGFBQU8sQ0FBQ0MsR0FBUixDQUFhLDRCQUEyQmhCLE1BQU8sS0FBSWMsYUFBYyxFQUFqRTtBQUNIO0FBQ0o7O0FBQ0QsU0FBT2YsV0FBUDtBQUNILENBekJNIiwiZmlsZSI6Ii4vbGliL3BsdWdpbi1jb21wb3NlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG5leHBvcnQgY29uc3QgY3JlYXRlQ29tcG9zZU1pZGRsZXdhcmUgPSAoY2FjaGVkLCBjb21wb3NlTGlzdCkgPT4ge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShjb21wb3NlTGlzdCkpIHtcbiAgICAgICAgdGhyb3cgVHlwZUVycm9yKFwicmVxdWlyZSBbY29tcG9zZSBsaXN0XSBsaXN0IG9mIG1pZGRsZXdhcmUgaWRcIik7XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbihjb250ZXh0KSB7XG4gICAgICAgIGxldCBpbmRleCA9IC0xO1xuICAgICAgICByZXR1cm4gZGlzcGF0Y2goMCk7XG4gICAgICAgIGZ1bmN0aW9uIGRpc3BhdGNoKGkpIHtcbiAgICAgICAgICAgIGluZGV4Kys7XG4gICAgICAgICAgICBpZiAoaSA+PSBjb21wb3NlTGlzdC5sZW5ndGgpIHJldHVybiBudWxsO1xuICAgICAgICAgICAgY29uc3QgZm4gPSBjYWNoZWRbY29tcG9zZUxpc3RbaV1dLmV4cG9ydHMuaGFuZGxlcjtcbiAgICAgICAgICAgIHJldHVybiBmbihjb250ZXh0LCBkaXNwYXRjaC5iaW5kKG51bGwsIGkrMSkpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyBwbHVnaW4gbG9hZGVyXG5leHBvcnQgY29uc3QgbG9hZENhY2hlZE1pZGRsZXdhcmUgPSAoKSA9PiB7XG4gICAgY29uc3QgcGx1Z2luRGlyID0gYC4vcGx1Z2luc2A7XG4gICAgLy8gc2NhbiBwbHVnaW4gZGlyXG4gICAgY29uc3QgcGx1Z2luRGlyTGlzdCA9IGZzLnJlYWRkaXJTeW5jKHBsdWdpbkRpcik7XG4gICAgY29uc3QgbWlkZGxld2FyZXMgPSB7fTtcbiAgICBmb3IgKGxldCBmb2xkZXIgb2YgcGx1Z2luRGlyTGlzdCkge1xuICAgICAgICBjb25zdCBmaWxlUGF0aCA9IHBhdGguam9pbihwbHVnaW5EaXIsIGZvbGRlcik7XG4gICAgICAgICAgICAvLyBjb25zdCBzdGF0ID0gZnMuc3RhdFN5bmMoZmlsZVBhdGgpO1xuICAgICAgICBjb25zdCBtYW5pZmVzdCA9IHBhdGguam9pbihmaWxlUGF0aCwgJ21hbmlmZXN0Lmpzb24nKTtcbiAgICAgICAgY29uc3QgbWYgPSBwYXRoLmpvaW4oZmlsZVBhdGgsICdtb2R1bGUuanMnKTtcbiAgICAgICAgdHJ5e1xuICAgICAgICAgICAgY29uc3QgbWV0YSA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKG1hbmlmZXN0LCAndXRmLTgnKSlcbiAgICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBmcy5yZWFkRmlsZVN5bmMobWYpO1xuICAgICAgICAgICAgY29uc3QgZm4gPSBuZXcgRnVuY3Rpb24oJ24nLCBjb250ZW50KTtcbiAgICAgICAgICAgIGNvbnN0IGV4cG9ydHMgPSBmbigpO1xuICAgICAgICAgICAgY29uc3QgY29tcG9uZW50ID0ge1xuICAgICAgICAgICAgICAgIGluZGV4OiBwYXRoLmpvaW4oZmlsZVBhdGgsICdtb2R1bGUuaHRtbCcpXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgbWlkZGxld2FyZXNbbWV0YS5pZF0gPSBPYmplY3QuYXNzaWduKHt9LCBtZXRhLCB7ZXhwb3J0c30sIHtjb21wb25lbnR9KTtcbiAgICAgICAgICAgIFxuICAgICAgICB9IGNhdGNoKGxvYWRFeGNlcHRpb24pIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBjYW4gbm90IGxvYWQgbWlkZGxld2FyZTogJHtmb2xkZXJ9LCAke2xvYWRFeGNlcHRpb259YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1pZGRsZXdhcmVzO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/plugin-compose.js\n");

/***/ }),

/***/ "./pages/api/task/submit.js":
/*!**********************************!*\
  !*** ./pages/api/task/submit.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ handler; }\n/* harmony export */ });\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cors */ \"cors\");\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cors__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_init_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/init_middleware */ \"./lib/init_middleware.js\");\n/* harmony import */ var _service_TaskRunner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../service/TaskRunner */ \"./service/TaskRunner.js\");\n\n\n\nconst cors = (0,_lib_init_middleware__WEBPACK_IMPORTED_MODULE_1__.default)(cors__WEBPACK_IMPORTED_MODULE_0___default()({\n  methods: ['GET', 'POST', 'OPTIONS']\n}));\nasync function handler(req, res) {\n  await cors(req, res);\n  const {\n    nodeTree,\n    buildProfile\n  } = req.body;\n  const taskRunner = new _service_TaskRunner__WEBPACK_IMPORTED_MODULE_2__.default(nodeTree, buildProfile);\n  const analysisDiagram = await taskRunner.run();\n  res.status(200).json({\n    data: {\n      diagram: analysisDiagram\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1zdGFydGVyLy4vcGFnZXMvYXBpL3Rhc2svc3VibWl0LmpzPzEyMWMiXSwibmFtZXMiOlsiY29ycyIsImluaXRNaWRkbGV3YXJlIiwiQ29ycyIsIm1ldGhvZHMiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibm9kZVRyZWUiLCJidWlsZFByb2ZpbGUiLCJib2R5IiwidGFza1J1bm5lciIsIlRhc2tSdW5uZXIiLCJhbmFseXNpc0RpYWdyYW0iLCJydW4iLCJzdGF0dXMiLCJqc29uIiwiZGF0YSIsImRpYWdyYW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRUEsTUFBTUEsSUFBSSxHQUFHQyw2REFBYyxDQUN6QkMsMkNBQUksQ0FBQztBQUNIQyxTQUFPLEVBQUUsQ0FBQyxLQUFELEVBQVEsTUFBUixFQUFnQixTQUFoQjtBQUROLENBQUQsQ0FEcUIsQ0FBM0I7QUFNZSxlQUFlQyxPQUFmLENBQXVCQyxHQUF2QixFQUE0QkMsR0FBNUIsRUFBaUM7QUFDOUMsUUFBTU4sSUFBSSxDQUFDSyxHQUFELEVBQU1DLEdBQU4sQ0FBVjtBQUVBLFFBQU07QUFBQ0MsWUFBRDtBQUFXQztBQUFYLE1BQTJCSCxHQUFHLENBQUNJLElBQXJDO0FBRUEsUUFBTUMsVUFBVSxHQUFHLElBQUlDLHdEQUFKLENBQWVKLFFBQWYsRUFBeUJDLFlBQXpCLENBQW5CO0FBQ0EsUUFBTUksZUFBZSxHQUFHLE1BQU1GLFVBQVUsQ0FBQ0csR0FBWCxFQUE5QjtBQUNBUCxLQUFHLENBQUNRLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFDQyxRQUFJLEVBQUU7QUFBRUMsYUFBTyxFQUFFTDtBQUFYO0FBQVAsR0FBckI7QUFDRCIsImZpbGUiOiIuL3BhZ2VzL2FwaS90YXNrL3N1Ym1pdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb3JzIGZyb20gJ2NvcnMnXG5pbXBvcnQgaW5pdE1pZGRsZXdhcmUgZnJvbSAnLi4vLi4vLi4vbGliL2luaXRfbWlkZGxld2FyZSdcbmltcG9ydCBUYXNrUnVubmVyIGZyb20gJy4uLy4uLy4uL3NlcnZpY2UvVGFza1J1bm5lcic7XG5cbmNvbnN0IGNvcnMgPSBpbml0TWlkZGxld2FyZShcbiAgQ29ycyh7XG4gICAgbWV0aG9kczogWydHRVQnLCAnUE9TVCcsICdPUFRJT05TJ10sXG4gIH0pXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcbiAgYXdhaXQgY29ycyhyZXEsIHJlcylcblxuICBjb25zdCB7bm9kZVRyZWUsIGJ1aWxkUHJvZmlsZX0gPSByZXEuYm9keTtcblxuICBjb25zdCB0YXNrUnVubmVyID0gbmV3IFRhc2tSdW5uZXIobm9kZVRyZWUsIGJ1aWxkUHJvZmlsZSk7XG4gIGNvbnN0IGFuYWx5c2lzRGlhZ3JhbSA9IGF3YWl0IHRhc2tSdW5uZXIucnVuKCk7XG4gIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtkYXRhOiB7IGRpYWdyYW06IGFuYWx5c2lzRGlhZ3JhbSB9fSlcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/api/task/submit.js\n");

/***/ }),

/***/ "./service/FlowMixer.js":
/*!******************************!*\
  !*** ./service/FlowMixer.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar Promise = __webpack_require__(/*! es6-promise */ \"es6-promise\").Promise;\n\nclass FlowMixer {\n  constructor(_nodeTree, _buildProfile) {\n    this.nodeTree = _nodeTree;\n    this.buildProfile = _buildProfile;\n  }\n\n  async mergedMultiFlow(flowList) {\n    const flowValueList = await Promise.all(flowList); // assume text line format\n\n    const concatedFile = flowValueList.reduce((a, c) => a.concat(c), \"\");\n    return concatedFile;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (FlowMixer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1zdGFydGVyLy4vc2VydmljZS9GbG93TWl4ZXIuanM/NzFiZiJdLCJuYW1lcyI6WyJQcm9taXNlIiwicmVxdWlyZSIsIkZsb3dNaXhlciIsImNvbnN0cnVjdG9yIiwiX25vZGVUcmVlIiwiX2J1aWxkUHJvZmlsZSIsIm5vZGVUcmVlIiwiYnVpbGRQcm9maWxlIiwibWVyZ2VkTXVsdGlGbG93IiwiZmxvd0xpc3QiLCJmbG93VmFsdWVMaXN0IiwiYWxsIiwiY29uY2F0ZWRGaWxlIiwicmVkdWNlIiwiYSIsImMiLCJjb25jYXQiXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxPQUFPLEdBQUdDLDZEQUFkOztBQUVBLE1BQU1DLFNBQU4sQ0FBZ0I7QUFDWkMsYUFBVyxDQUFDQyxTQUFELEVBQVlDLGFBQVosRUFBMkI7QUFDbEMsU0FBS0MsUUFBTCxHQUFnQkYsU0FBaEI7QUFDQSxTQUFLRyxZQUFMLEdBQW9CRixhQUFwQjtBQUNIOztBQUNELFFBQU1HLGVBQU4sQ0FBc0JDLFFBQXRCLEVBQWdDO0FBQzVCLFVBQU1DLGFBQWEsR0FBRyxNQUFNVixPQUFPLENBQUNXLEdBQVIsQ0FBWUYsUUFBWixDQUE1QixDQUQ0QixDQUU1Qjs7QUFDQSxVQUFNRyxZQUFZLEdBQUdGLGFBQWEsQ0FBQ0csTUFBZCxDQUFxQixDQUFDQyxDQUFELEVBQUlDLENBQUosS0FBVUQsQ0FBQyxDQUFDRSxNQUFGLENBQVNELENBQVQsQ0FBL0IsRUFBNEMsRUFBNUMsQ0FBckI7QUFDQSxXQUFPSCxZQUFQO0FBQ0g7O0FBVlc7O0FBYWhCLCtEQUFlVixTQUFmIiwiZmlsZSI6Ii4vc2VydmljZS9GbG93TWl4ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgUHJvbWlzZSA9IHJlcXVpcmUoJ2VzNi1wcm9taXNlJykuUHJvbWlzZTtcblxuY2xhc3MgRmxvd01peGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihfbm9kZVRyZWUsIF9idWlsZFByb2ZpbGUpIHtcbiAgICAgICAgdGhpcy5ub2RlVHJlZSA9IF9ub2RlVHJlZTtcbiAgICAgICAgdGhpcy5idWlsZFByb2ZpbGUgPSBfYnVpbGRQcm9maWxlO1xuICAgIH1cbiAgICBhc3luYyBtZXJnZWRNdWx0aUZsb3coZmxvd0xpc3QpIHtcbiAgICAgICAgY29uc3QgZmxvd1ZhbHVlTGlzdCA9IGF3YWl0IFByb21pc2UuYWxsKGZsb3dMaXN0KTtcbiAgICAgICAgLy8gYXNzdW1lIHRleHQgbGluZSBmb3JtYXRcbiAgICAgICAgY29uc3QgY29uY2F0ZWRGaWxlID0gZmxvd1ZhbHVlTGlzdC5yZWR1Y2UoKGEsIGMpID0+IGEuY29uY2F0KGMpLCBcIlwiKTtcbiAgICAgICAgcmV0dXJuIGNvbmNhdGVkRmlsZTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZsb3dNaXhlcjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./service/FlowMixer.js\n");

/***/ }),

/***/ "./service/PipelineWorker.js":
/*!***********************************!*\
  !*** ./service/PipelineWorker.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var readline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! readline */ \"readline\");\n/* harmony import */ var readline__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(readline__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_plugin_compose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/plugin-compose */ \"./lib/plugin-compose.js\");\n\n\n\n\nclass PipelineWorker {\n  constructor(_nodeTree, _buildProfile) {\n    this.nodeTree = _nodeTree;\n    this.buildProfile = _buildProfile; // create compose plugin handler chain\n\n    const cachedMiddleware = (0,_lib_plugin_compose__WEBPACK_IMPORTED_MODULE_2__.loadCachedMiddleware)();\n    const composedMiddleware = (0,_lib_plugin_compose__WEBPACK_IMPORTED_MODULE_2__.createComposeMiddleware)(cachedMiddleware, [\"acabula-middleware-line-text-formatter\", // \"acabula-middleware-chunkify\", \n    // \"acabula-middleware-genelizer\", \n    \"acabula-middleware-syntax-highlight\"]);\n    this.composedPlugin = composedMiddleware;\n  }\n\n  async applyPluginPipeline(resource, checkedPlugin) {\n    // checkedPlugin shoud be a list of object with user option parameters\n    const ordinaryPluginList = checkedPlugin.sort();\n    const dataFrame = await async function (fn) {\n      // const df = new dfd.DataFrame([[\"a\", \"a\", \"a\", \"a\", \"a\"]], { columns: [\"DateTime\", \"Level\", \"ThreadId\", \"ProcessName\", \"Message\"] });\n      const context = {\n        data: null,\n        dataFrame: []\n      };\n      const statistics = {\n        line: 0\n      };\n\n      try {\n        const rl = (0,readline__WEBPACK_IMPORTED_MODULE_1__.createInterface)({\n          input: resource,\n          crlfDelay: Infinity\n        });\n        rl.on('line', line => {\n          // apply middleware for every line, and create \n          context.data = line;\n          statistics.line++;\n          fn(context); // df.append(context.data);\n        });\n        await (0,events__WEBPACK_IMPORTED_MODULE_0__.once)(rl, 'close');\n        console.log(`line process finished, origin line: ${statistics.line}, record log line: ${context.dataFrame.length}`);\n      } catch (err) {\n        console.error(err);\n      }\n\n      return context.dataFrame;\n    }(this.composedPlugin); // bulk process\n\n    const SEGMENT_DELIMITER = \"TMSM main service OnStart\";\n    const shards = [];\n    let section_start_index = 0;\n    let section_end_index = null;\n\n    for (let [index, record] of dataFrame.entries()) {\n      const message = record[4];\n\n      if (message.search(SEGMENT_DELIMITER) > -1) {\n        if (index == 0) {\n          section_start_index = 0;\n          continue;\n        }\n\n        section_end_index = index - 1;\n        shards.push([section_start_index, section_end_index]);\n        section_start_index = index;\n      }\n    }\n\n    section_end_index = dataFrame.length - 1;\n    shards.push([section_start_index, section_end_index]);\n    const result = [];\n\n    const useStatistics = recordList => {\n      // groupby and count\n      const levelStat = recordList.reduce((m, e) => {\n        m[e[1]] = (m[e[1]] || 0) + 1;\n        return m;\n      }, {}); // padding data type.\n\n      return Object.assign({\n        ERROR: 0,\n        INFO: 0,\n        DEBUG: 0,\n        WARN: 0\n      }, levelStat);\n    }; // create thread block\n\n\n    for (let [start, end] of shards) {\n      const thread_map = new Map();\n\n      for (let i = start; i <= end; i++) {\n        const record_tid = dataFrame[i][2];\n\n        if (!thread_map[record_tid]) {\n          thread_map[record_tid] = [];\n        }\n\n        thread_map[record_tid].push(dataFrame[i]);\n      }\n\n      const serverStartBlock = {};\n      serverStartBlock.segmentName = dataFrame[start][0];\n      serverStartBlock.group = [];\n\n      for (let threadId in thread_map) {\n        const threadBlock = {};\n        threadBlock.blockName = threadId;\n        threadBlock.indicators = useStatistics(thread_map[threadId]); // other\n\n        threadBlock.scheduler = false;\n        threadBlock.timeSpan = {\n          start: thread_map[threadId][0][0],\n          end: thread_map[threadId][thread_map[threadId].length - 1][0]\n        };\n        threadBlock.previewContent = thread_map[threadId].slice(0, 5).map(record => record[4]);\n        serverStartBlock.group.push(threadBlock);\n      }\n\n      result.push(serverStartBlock); // clear map because the tid will reused in difference server onstart\n\n      thread_map.clear();\n    }\n\n    return result;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (PipelineWorker);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./service/PipelineWorker.js\n");

/***/ }),

/***/ "./service/ResourceManager.js":
/*!************************************!*\
  !*** ./service/ResourceManager.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst {\n  readFile,\n  createReadStream\n} = __webpack_require__(/*! fs */ \"fs\");\n\nvar Promise = __webpack_require__(/*! es6-promise */ \"es6-promise\").Promise;\n\nclass ResourceManager {\n  constructor(_nodeTree, _buildProfile) {\n    this.nodeTree = _nodeTree;\n    this.buildProfile = _buildProfile;\n  }\n\n  async getResource(resourceName) {\n    // use sync read\n    const fileContent = await new Promise(function (resolve, reject) {\n      readFile(`./upload/${resourceName}`, 'utf8', result => {\n        resolve(result);\n      });\n    });\n    return fileContent;\n  }\n\n  async getReadStream(resourceName) {\n    const fileName = `./upload/${resourceName}`;\n    const fileStream = createReadStream(fileName);\n    return fileStream;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ResourceManager);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWFybi1zdGFydGVyLy4vc2VydmljZS9SZXNvdXJjZU1hbmFnZXIuanM/YzM0YiJdLCJuYW1lcyI6WyJyZWFkRmlsZSIsImNyZWF0ZVJlYWRTdHJlYW0iLCJyZXF1aXJlIiwiUHJvbWlzZSIsIlJlc291cmNlTWFuYWdlciIsImNvbnN0cnVjdG9yIiwiX25vZGVUcmVlIiwiX2J1aWxkUHJvZmlsZSIsIm5vZGVUcmVlIiwiYnVpbGRQcm9maWxlIiwiZ2V0UmVzb3VyY2UiLCJyZXNvdXJjZU5hbWUiLCJmaWxlQ29udGVudCIsInJlc29sdmUiLCJyZWplY3QiLCJyZXN1bHQiLCJnZXRSZWFkU3RyZWFtIiwiZmlsZU5hbWUiLCJmaWxlU3RyZWFtIl0sIm1hcHBpbmdzIjoiO0FBQUEsTUFBTTtBQUFFQSxVQUFGO0FBQVlDO0FBQVosSUFBaUNDLG1CQUFPLENBQUMsY0FBRCxDQUE5Qzs7QUFDQSxJQUFJQyxPQUFPLEdBQUdELDZEQUFkOztBQUVBLE1BQU1FLGVBQU4sQ0FBc0I7QUFDbEJDLGFBQVcsQ0FBQ0MsU0FBRCxFQUFZQyxhQUFaLEVBQTJCO0FBQ2xDLFNBQUtDLFFBQUwsR0FBZ0JGLFNBQWhCO0FBQ0EsU0FBS0csWUFBTCxHQUFvQkYsYUFBcEI7QUFDSDs7QUFDRCxRQUFNRyxXQUFOLENBQWtCQyxZQUFsQixFQUFnQztBQUM1QjtBQUNBLFVBQU1DLFdBQVcsR0FBRyxNQUFNLElBQUlULE9BQUosQ0FDMUIsVUFBU1UsT0FBVCxFQUFrQkMsTUFBbEIsRUFBMEI7QUFDdEJkLGNBQVEsQ0FBRSxZQUFXVyxZQUFhLEVBQTFCLEVBQTZCLE1BQTdCLEVBQXNDSSxNQUFELElBQVU7QUFDbkRGLGVBQU8sQ0FBQ0UsTUFBRCxDQUFQO0FBQ0gsT0FGTyxDQUFSO0FBR0gsS0FMeUIsQ0FBMUI7QUFNQSxXQUFPSCxXQUFQO0FBQ0g7O0FBQ0QsUUFBTUksYUFBTixDQUFvQkwsWUFBcEIsRUFBa0M7QUFDOUIsVUFBTU0sUUFBUSxHQUFJLFlBQVdOLFlBQWEsRUFBMUM7QUFDQSxVQUFNTyxVQUFVLEdBQUdqQixnQkFBZ0IsQ0FBQ2dCLFFBQUQsQ0FBbkM7QUFDQSxXQUFPQyxVQUFQO0FBQ0g7O0FBbkJpQjs7QUFzQnRCLCtEQUFlZCxlQUFmIiwiZmlsZSI6Ii4vc2VydmljZS9SZXNvdXJjZU1hbmFnZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IHJlYWRGaWxlLCBjcmVhdGVSZWFkU3RyZWFtIH0gPSByZXF1aXJlKCdmcycpO1xudmFyIFByb21pc2UgPSByZXF1aXJlKCdlczYtcHJvbWlzZScpLlByb21pc2U7XG5cbmNsYXNzIFJlc291cmNlTWFuYWdlciB7XG4gICAgY29uc3RydWN0b3IoX25vZGVUcmVlLCBfYnVpbGRQcm9maWxlKSB7XG4gICAgICAgIHRoaXMubm9kZVRyZWUgPSBfbm9kZVRyZWU7XG4gICAgICAgIHRoaXMuYnVpbGRQcm9maWxlID0gX2J1aWxkUHJvZmlsZTtcbiAgICB9XG4gICAgYXN5bmMgZ2V0UmVzb3VyY2UocmVzb3VyY2VOYW1lKSB7XG4gICAgICAgIC8vIHVzZSBzeW5jIHJlYWRcbiAgICAgICAgY29uc3QgZmlsZUNvbnRlbnQgPSBhd2FpdCBuZXcgUHJvbWlzZShcbiAgICAgICAgZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgICByZWFkRmlsZShgLi91cGxvYWQvJHtyZXNvdXJjZU5hbWV9YCwgJ3V0ZjgnLCAocmVzdWx0KT0+e1xuICAgICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZmlsZUNvbnRlbnQ7XG4gICAgfVxuICAgIGFzeW5jIGdldFJlYWRTdHJlYW0ocmVzb3VyY2VOYW1lKSB7XG4gICAgICAgIGNvbnN0IGZpbGVOYW1lID0gYC4vdXBsb2FkLyR7cmVzb3VyY2VOYW1lfWA7XG4gICAgICAgIGNvbnN0IGZpbGVTdHJlYW0gPSBjcmVhdGVSZWFkU3RyZWFtKGZpbGVOYW1lKTtcbiAgICAgICAgcmV0dXJuIGZpbGVTdHJlYW07XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBSZXNvdXJjZU1hbmFnZXI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./service/ResourceManager.js\n");

/***/ }),

/***/ "./service/TaskRunner.js":
/*!*******************************!*\
  !*** ./service/TaskRunner.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _FlowMixer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FlowMixer */ \"./service/FlowMixer.js\");\n/* harmony import */ var _PipelineWorker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PipelineWorker */ \"./service/PipelineWorker.js\");\n/* harmony import */ var _ResourceManager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ResourceManager */ \"./service/ResourceManager.js\");\n\n\n\n\nclass TaskRunner {\n  constructor(_nodeTree, _buildProfile) {\n    this.nodeTree = _nodeTree;\n    this.buildProfile = _buildProfile;\n    this.flowMixer = new _FlowMixer__WEBPACK_IMPORTED_MODULE_0__.default(_nodeTree, _buildProfile);\n    this.pipelineWorker = new _PipelineWorker__WEBPACK_IMPORTED_MODULE_1__.default(_nodeTree, _buildProfile);\n    this.resourceManager = new _ResourceManager__WEBPACK_IMPORTED_MODULE_2__.default(_nodeTree, _buildProfile);\n  }\n\n  async createResourceFlow(nodeInfo) {\n    const {\n      id,\n      labelText,\n      resourceName,\n      nodeType,\n      nodeDetailType,\n      checkedPlugin,\n      children\n    } = nodeInfo; // check if this is a mix node\n\n    if (children && children.length > 0) {\n      // concat every node info\n      const subGroup = [];\n\n      for (let subNode of children) {\n        subGroup.push(await this.createResourceFlow(subNode));\n      } // const mergedResourceFlow = await this.flowMixer.mergedMultiFlow(subGroup);\n\n\n      return {\n        id,\n        labelText,\n        subGroup\n      };\n    } // this is a data node\n\n\n    let result = {};\n\n    if (resourceName) {\n      // read resource\n      const resource = await this.resourceManager.getReadStream(resourceName); // apply plugin according to user selected\n\n      const applyedPluginResource = await this.pipelineWorker.applyPluginPipeline(resource, checkedPlugin);\n      result = {\n        fragments: applyedPluginResource,\n        id,\n        labelText\n      };\n    } else {\n      result = {\n        id,\n        labelText\n      };\n    }\n\n    return result;\n  } // flatten tree structure, and global merge sort all block, assigin to time line block\n  // we need to keep the right hierarchy on block which belong to the column(track) and segment\n\n\n  convertTreeToMap2D(root) {\n    // let depth = 0;\n    let queue = [root];\n    const trackList = [];\n\n    while (queue.length > 0) {\n      const {\n        id,\n        labelText,\n        subGroup,\n        fragments\n      } = queue.shift(); // this is a group node\n\n      if (subGroup) {\n        queue = queue.concat(subGroup);\n      } else if (fragments) {\n        // const flatMapProp = (m) => (p) => {\n        //     // return m.map(e => Object.assign(Array.isArray(e.group)? flatMapProp(e.group)(p): e, p));\n        //     const m1 = m.map(e => {Object.assign(e, p)});\n        //     const m2 = m1.map(e => {e.group.map(e2 => {Object.assign(e2, )})})\n        // };\n        // this.mergeInsert(blockList, flatMapProp(fragments)({id, labelText}))\n        let blockList = [];\n\n        for (let seg of fragments) {\n          const segName = seg.segmentName;\n\n          for (let blk of seg.group) {\n            const blockInfo = Object.assign({}, blk, {\n              segName\n            });\n            blockList.push(blockInfo);\n          }\n        }\n\n        const sortedBlockList = blockList.sort((a, b) => {\n          if (a.timeSpan.start == b.timeSpan.start) {\n            if (a.timeSpan.end == b.timeSpan.end) return 0;\n            return a.timeSpan.end > b.timeSpan.end ? 1 : -1;\n          }\n\n          ;\n          return a.timeSpan.start > b.timeSpan.start ? 1 : -1;\n        });\n        trackList.push({\n          id,\n          labelText,\n          dataList: sortedBlockList\n        });\n      } else {\n        throw Error(`invalid node, id: ${id}`);\n      }\n    } // group block into 2d array by time span\n\n\n    const computedMap = trackList.map(track => Object.assign(track, {\n      cursor: 0,\n      cellMap: [[]]\n    }));\n\n    const hasData = t => t.cursor < t.dataList.length; // sort by start time in column order list\n\n\n    let minStartTime = \"9999-99-99 99:99:99.9999\"; // let selectTrackWhichHasMinStartItem = [];\n\n    let selectTrackWhichHasMinStartItemSet = [];\n    let maxBottomTime = -1;\n    let maxEndInd = -1;\n\n    const createNewRow = cm => {\n      for (let [i, t] of cm.entries()) {\n        t.cellMap.push([]);\n      }\n    };\n\n    let c = 0; // console.log(trackList[0].dataList[computedMap[0].dataList.length - 4]);\n\n    while (computedMap.some(hasData)) {\n      // console.log(\"=======================\");\n      // find the min start time of element from cursor list\n      selectTrackWhichHasMinStartItemSet = [];\n      let localMinStartTime = \"9999-99-99 99:99:99.9999\";\n\n      for (let [i, t] of computedMap.entries()) {\n        if (t.cursor >= t.dataList.length) continue;\n        const {\n          start: curStartTime,\n          end: curEndTime\n        } = t.dataList[t.cursor].timeSpan; // console.log(curStartTime, minStartTime);\n\n        if (curStartTime < localMinStartTime) {\n          localMinStartTime = curStartTime;\n          selectTrackWhichHasMinStartItemSet = [i];\n        } else if (curStartTime == localMinStartTime) {\n          selectTrackWhichHasMinStartItemSet.push(i);\n        }\n      }\n\n      if (minStartTime > localMinStartTime) {\n        minStartTime = localMinStartTime;\n      } // console.log(selectTrackWhichHasMinStartItemSet, minStartTime, maxBottomTime);\n      // c++;\n      // if (c > 10) return;\n      // find other same value for selectTrackWhichHasMinStartItemSet\n\n\n      console.log(selectTrackWhichHasMinStartItemSet);\n      let hasSealRow = false;\n      let hasFlushedAll = false;\n\n      for (let selectTrackWhichHasMinStartItem of selectTrackWhichHasMinStartItemSet) {\n        // console.log(selectTrackWhichHasMinStartItem);\n        const selectedTrack = computedMap[selectTrackWhichHasMinStartItem];\n        const selectedLayerInTrack = selectedTrack.dataList[selectedTrack.cursor];\n        const {\n          curStartTime,\n          curEndTime\n        } = selectedLayerInTrack.timeSpan; // check if seal row, the further layer should be added in the new row\n\n        if (!hasSealRow && (curStartTime > maxBottomTime || selectedTrack.cursor > 0 && selectedLayerInTrack.segName != selectedTrack.dataList[selectedTrack.cursor - 1].segName)) {\n          createNewRow(computedMap);\n          hasSealRow = true;\n          minStartTime = curStartTime;\n        }\n\n        selectedTrack.cellMap[selectedTrack.cellMap.length - 1].push(selectedTrack.dataList[selectedTrack.cursor]); // expand bound bottom box \n\n        if (curEndTime > maxBottomTime) {\n          maxBottomTime = curEndTime;\n        }\n\n        selectedTrack.cursor++;\n\n        if (selectedTrack.cursor == selectedTrack.dataList.length) {\n          // reset min start time\n          hasFlushedAll = true;\n          console.log(`track ${selectedTrack.labelText} flushed`);\n        }\n      }\n\n      if (hasFlushedAll) {\n        createNewRow(computedMap);\n        minStartTime = \"9999-99-99 99:99:99.9999\";\n      } // for(let t of computedMap) {\n      //     console.log(t.cursor, t.cellMap);\n      // }\n\n    } // unionTimeSection(blockList);\n\n\n    const selectField = t => {\n      const {\n        id,\n        labelText,\n        cellMap\n      } = t;\n      return {\n        id,\n        labelText,\n        cellMap\n      };\n    };\n\n    return computedMap.map(selectField);\n  } // BS insert, and group in time section\n  // mergeInsert(activeList, element) {\n  //     const {start, end} = element;\n  //     if (activeList.length == 0) {\n  //         activeList.push({\n  //             start,\n  //             end,\n  //             data: [\n  //                 element\n  //             ]\n  //         });\n  //         return;\n  //     } else {\n  //         const latestWindow = activeList[activeList.length - 1];\n  //     }\n  // }\n\n\n  async run() {\n    const documentTree = await this.createResourceFlow(this.nodeTree); // transform to timeline view\n\n    const diagram = this.convertTreeToMap2D(documentTree);\n    return diagram;\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TaskRunner);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./service/TaskRunner.js\n");

/***/ }),

/***/ "cors":
/*!***********************!*\
  !*** external "cors" ***!
  \***********************/
/***/ (function(module) {

"use strict";
module.exports = require("cors");;

/***/ }),

/***/ "es6-promise":
/*!******************************!*\
  !*** external "es6-promise" ***!
  \******************************/
/***/ (function(module) {

"use strict";
module.exports = require("es6-promise");;

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ (function(module) {

"use strict";
module.exports = require("events");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ (function(module) {

"use strict";
module.exports = require("fs");;

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ (function(module) {

"use strict";
module.exports = require("path");;

/***/ }),

/***/ "readline":
/*!***************************!*\
  !*** external "readline" ***!
  \***************************/
/***/ (function(module) {

"use strict";
module.exports = require("readline");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
var __webpack_exports__ = (__webpack_exec__("./pages/api/task/submit.js"));
module.exports = __webpack_exports__;

})();